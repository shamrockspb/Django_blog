version: '3.8'

services:
    web:
        build:
            context: .
            dockerfile: Dockerfile
        command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; gunicorn --bind 0.0.0.0:8000 mysite.wsgi'
        #volumes:
        #    - .:/app
        expose:
            - 8000
        env_file:
            - prod.env
        depends_on:
            - db
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.django.rule=Host(`trifolium-project.com`)"
            - "traefik.http.routers.django.tls=true"
            - "traefik.http.routers.django.tls.certresolver=letsencrypt"
            #- "traefik.http.routers.django.entrypoints=websecure"
        restart: always
    db:
        image: postgres:13-alpine
        volumes:
            - postgres_data_prod:/var/lib/postgresql/data/
        expose:
            - 5432
        env_file:
            - prod.env
        restart: always
    traefik:
        build:
            context: .
            dockerfile: Dockerfile.traefik
        ports:
            - 80:80
            - 443:443
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
            - "./traefik-public-certificates:/certificates"
            #- "./letsencrypt:/letsencrypt"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.dashboard.rule=Host(`dashboard.trifolium-project.com`)"
            - "traefik.http.routers.dashboard.tls=true"
            - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
            - "traefik.http.routers.dashboard.service=api@internal"
            - "traefik.http.routers.dashboard.middlewares=auth"
            #- "traefik.http.routers.dashboard.middlewares=test-auth"
            - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_USER}"
            #- "traefik.http.middlewares.test-auth.basicauth.usersfile=traefik/prod/usersfile"
        restart: always
volumes:
    postgres_data_prod:
    traefik-public-certificates: